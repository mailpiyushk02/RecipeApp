// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RecipeApp_RecipeAPI.Data;

#nullable disable

namespace RecipeApp_RecipeAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230516133057_ModifiedRecipeTable")]
    partial class ModifiedRecipeTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RecipeApp_RecipeAPI.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Img_large")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Img_small")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Locale_id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Locale_id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("RecipeApp_RecipeAPI.Models.Cook", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Img_large")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Img_small")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Youtube_url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cooks");
                });

            modelBuilder.Entity("RecipeApp_RecipeAPI.Models.CookFollower", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Cook_id")
                        .HasColumnType("int");

                    b.Property<int>("User_id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Cook_id");

                    b.HasIndex("User_id");

                    b.ToTable("CookFollowers");
                });

            modelBuilder.Entity("RecipeApp_RecipeAPI.Models.CookTime", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Locale_id")
                        .HasColumnType("int");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Locale_id");

                    b.ToTable("CookTimes");
                });

            modelBuilder.Entity("RecipeApp_RecipeAPI.Models.Diet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Diets");
                });

            modelBuilder.Entity("RecipeApp_RecipeAPI.Models.Ingredient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Img_large")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Img_small")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Locale_id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Locale_id");

                    b.ToTable("Ingredients");
                });

            modelBuilder.Entity("RecipeApp_RecipeAPI.Models.Locale", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Locales");
                });

            modelBuilder.Entity("RecipeApp_RecipeAPI.Models.Permission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Permissions");
                });

            modelBuilder.Entity("RecipeApp_RecipeAPI.Models.Reaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Img_large")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Img_small")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Reactions");
                });

            modelBuilder.Entity("RecipeApp_RecipeAPI.Models.Recipe", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Allergens")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Allergens_decription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Calories")
                        .HasColumnType("int");

                    b.Property<int>("Cook_id")
                        .HasColumnType("int");

                    b.Property<int>("Cooking_time")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Introduction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Locale_id")
                        .HasColumnType("int");

                    b.Property<int>("Servings")
                        .HasColumnType("int");

                    b.Property<string>("Tags")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Youtube_url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Cook_id");

                    b.HasIndex("Locale_id");

                    b.ToTable("Recipes");
                });

            modelBuilder.Entity("RecipeApp_RecipeAPI.Models.RecipeIngredient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Ingredient_id")
                        .HasColumnType("int");

                    b.Property<int>("Locale_id")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Quantity_unit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Recipe_id")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Ingredient_id");

                    b.HasIndex("Locale_id");

                    b.HasIndex("Recipe_id");

                    b.ToTable("RecipeIngredients");
                });

            modelBuilder.Entity("RecipeApp_RecipeAPI.Models.RecipeInstruction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Img_large")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Img_small")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Locale_id")
                        .HasColumnType("int");

                    b.Property<string>("Recipe_id")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Step_no")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Locale_id");

                    b.HasIndex("Recipe_id");

                    b.ToTable("RecipeInstructions");
                });

            modelBuilder.Entity("RecipeApp_RecipeAPI.Models.RecipeReaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Reaction_id")
                        .HasColumnType("int");

                    b.Property<string>("Recepie_id")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("User_id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Reaction_id");

                    b.HasIndex("Recepie_id");

                    b.HasIndex("User_id");

                    b.ToTable("RecipeReactions");
                });

            modelBuilder.Entity("RecipeApp_RecipeAPI.Models.RecipeReview", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<int>("User_id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("User_id");

                    b.ToTable("RecipeReviews");
                });

            modelBuilder.Entity("RecipeApp_RecipeAPI.Models.RecipeType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Locale_id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Locale_id");

                    b.ToTable("RecipeTypes");
                });

            modelBuilder.Entity("RecipeApp_RecipeAPI.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("RecipeApp_RecipeAPI.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Locale_id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone_no")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role_id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Locale_id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("RecipeApp_RecipeAPI.Models.Category", b =>
                {
                    b.HasOne("RecipeApp_RecipeAPI.Models.Locale", "Locale")
                        .WithMany()
                        .HasForeignKey("Locale_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Locale");
                });

            modelBuilder.Entity("RecipeApp_RecipeAPI.Models.CookFollower", b =>
                {
                    b.HasOne("RecipeApp_RecipeAPI.Models.Cook", "Cook")
                        .WithMany()
                        .HasForeignKey("Cook_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RecipeApp_RecipeAPI.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("User_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cook");

                    b.Navigation("User");
                });

            modelBuilder.Entity("RecipeApp_RecipeAPI.Models.CookTime", b =>
                {
                    b.HasOne("RecipeApp_RecipeAPI.Models.Locale", "Locale")
                        .WithMany()
                        .HasForeignKey("Locale_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Locale");
                });

            modelBuilder.Entity("RecipeApp_RecipeAPI.Models.Ingredient", b =>
                {
                    b.HasOne("RecipeApp_RecipeAPI.Models.Locale", "Locale")
                        .WithMany()
                        .HasForeignKey("Locale_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Locale");
                });

            modelBuilder.Entity("RecipeApp_RecipeAPI.Models.Recipe", b =>
                {
                    b.HasOne("RecipeApp_RecipeAPI.Models.Cook", "Cook")
                        .WithMany()
                        .HasForeignKey("Cook_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RecipeApp_RecipeAPI.Models.Locale", "Locale")
                        .WithMany()
                        .HasForeignKey("Locale_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cook");

                    b.Navigation("Locale");
                });

            modelBuilder.Entity("RecipeApp_RecipeAPI.Models.RecipeIngredient", b =>
                {
                    b.HasOne("RecipeApp_RecipeAPI.Models.Ingredient", "Ingredient")
                        .WithMany()
                        .HasForeignKey("Ingredient_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RecipeApp_RecipeAPI.Models.Locale", "Locale")
                        .WithMany()
                        .HasForeignKey("Locale_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RecipeApp_RecipeAPI.Models.Recipe", "Recipe")
                        .WithMany()
                        .HasForeignKey("Recipe_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ingredient");

                    b.Navigation("Locale");

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("RecipeApp_RecipeAPI.Models.RecipeInstruction", b =>
                {
                    b.HasOne("RecipeApp_RecipeAPI.Models.Locale", "Locale")
                        .WithMany()
                        .HasForeignKey("Locale_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RecipeApp_RecipeAPI.Models.Recipe", "Recipe")
                        .WithMany()
                        .HasForeignKey("Recipe_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Locale");

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("RecipeApp_RecipeAPI.Models.RecipeReaction", b =>
                {
                    b.HasOne("RecipeApp_RecipeAPI.Models.Reaction", "Reaction")
                        .WithMany()
                        .HasForeignKey("Reaction_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RecipeApp_RecipeAPI.Models.Recipe", "Recipe")
                        .WithMany()
                        .HasForeignKey("Recepie_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RecipeApp_RecipeAPI.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("User_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Reaction");

                    b.Navigation("Recipe");

                    b.Navigation("User");
                });

            modelBuilder.Entity("RecipeApp_RecipeAPI.Models.RecipeReview", b =>
                {
                    b.HasOne("RecipeApp_RecipeAPI.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("User_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("RecipeApp_RecipeAPI.Models.RecipeType", b =>
                {
                    b.HasOne("RecipeApp_RecipeAPI.Models.Locale", "Locale")
                        .WithMany()
                        .HasForeignKey("Locale_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Locale");
                });

            modelBuilder.Entity("RecipeApp_RecipeAPI.Models.User", b =>
                {
                    b.HasOne("RecipeApp_RecipeAPI.Models.Locale", "Locale")
                        .WithMany()
                        .HasForeignKey("Locale_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Locale");
                });
#pragma warning restore 612, 618
        }
    }
}
